---
title: "StateBuilder Tutorial"
toc: true
toc-location: left
---

The StateBuilder module is designed to allow rules-based generation of Neuroglancer states based on DataFrames or numpy arrays.

## Background

[Neuroglancer](https://github.com/google/neuroglancer) is a web application for viewing large volumetric imagery and segmentation data, as well as meshes and annotations like points or lines.
Data in Neuroglancer is organized into layers, where each layer is configured to show information like images, segmentation, or annotations.
Each layer can show one type of data and has different properties associated with it.
In addition, Neuroglancer also stores the exact view that the user sees — what location in the data is centered, the orientation and zoom level of the camera, and more.
Collectively, the information underlying both layers and the user view is refered to as the "state," which is stored as a collection of key/value pairs.

StateBuilder follows this model by defining a set of rules for initializing layers.
For layers that contain properties like selected segment ids or annotations, this configuration involves specifying how to map DataFrame columns to selected segmentations or annotations such as synapses.
The general pattern is that you build up a collection of configurations for individual layers, assemble them into a `StateBuilder` object, and then pass a dataframe through this object to render out a state.

## Simple Layers and StateBuilder

```python
from nglui import statebuilder

img = statebuilder.ImageLayerConfig(
    source=client.info.image_source(),
    contrast_controls=True, # this just puts in the code needed to manually adjust contrast
)

seg = statebuilder.SegmentationLayerConfig(
    source=client.info.segmentation_source(),
)
```

## Data-driven States