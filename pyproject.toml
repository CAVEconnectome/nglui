[build-system]
requires = ["hatchling>=1.26.1"]
build-backend = "hatchling.build"

[project]
name = "nglui"
version = "3.6.2"
description = "Framework for data-driven generation of neuroglancer states."
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "attrs>=24.2.0",
    "caveclient>=7.0.0",
    "ipython>=8.18.1",
    "neuroglancer>=2.40.1",
    "numpy>=1.26.4",
    "pandas>=2.2.3",
    "python-box>=7.2.0",
    "requests>=2.32.3",
    "six>=1.16.0",
    "webcolors>=24.11.1",
]
authors = [
    { name = "Casey Schneider-Mizell", email = "caseysm@gmail.com" },
    { name = "Forrest Collman" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://caveconnectome.github.io/nglui/"
Repository = "https://github.com/CAVEconnectome/nglui.git"
Changelog = "https://caveconnectome.github.io/nglui/changelog/"
Issues = "https://github.com/CAVEconnectome/nglui/issues"

[dependency-groups]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "responses",
    "ipykernel",
    "bump-my-version",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
]
lint = [
    "ruff"
]
[tool.uv]
default-groups = ["dev", "docs", "lint"]

[tool.bumpversion]
current_version = "3.6.2"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} â†’ {new_version}"
allow_dirty = false
commit = true
message = "v{new_version}"
commit_args = ""
post_commit_hooks = [".bmv-post-commit.sh"]

[[tool.bumpversion.files]]
filename = "src/nglui/__init__.py"

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[tool.ruff]
extend-exclude = ["*.ipynb"]

[tool.ruff.lint]
select=["E9","F63","F7","F82"]

[tool.poe.tasks.drybump]
cmd = "uv run bump-my-version bump --dry-run --verbose"
help = "Dry run of version bump for the project. Use with 'patch', 'minor', or 'major' to specify the version change."

[tool.poe.tasks.bump]
cmd = "uv run bump-my-version bump"
help = "Bump the version number in the project. Use with 'patch', 'minor', or 'major' to specify the version change."

[tool.poe.tasks.test]
cmd = "uv run pytest --cov=nglui tests"
help = "Run pytest with code coverage."

[tool.poe.tasks.doc-preview]
cmd = "uv run mkdocs serve"
help = "Preview documentation build locally"
